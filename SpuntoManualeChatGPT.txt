                                                𝗣𝗮𝗻𝗼𝗿𝗮𝗺𝗶𝗰𝗮 𝗱𝗲𝗹 𝗣𝗿𝗼𝗴𝗲𝘁𝘁𝗼

Il progetto è un'applicazione Java sviluppata per scaricare, analizzare e contare le parole più frequenti dagli articoli
ottenuti da The Guardian e da un file CSV. L'applicazione è suddivisa in tre classi principali: Analyse, Download, e App.

-Classe "Analyze" 

La classe è progettata per analizzare i file di testo presenti in una determinata cartella, estrarre le parole più frequenti e salvarle in un file di output. Ecco come funziona:

1. Utilizza la libreria Stanford NLP per semplificare l'estrazione delle parole da un testo.
2. Definisce un metodo extractTerms() che prende il percorso di una cartella come input e analizza i file di testo all'interno.
3. Legge un elenco di parole vietate dal file "BanList.txt" e le memorizza in un insieme.
4. Estrae le parole da ogni file di testo, filtrando quelle vietate, e conteggia le parole uniche in base ai loro conteggi.
5. Utilizza il metodo sortByValue() per ordinare le parole in base alla loro frequenza.
6. Stampa le prime 10 parole più frequenti e le salva in un file "parolefrequenti.txt".

-Classe Astratta "Download"

La classe astratta Download fornisce un'infrastruttura comune per il download e l'archiviazione di articoli. I punti chiave sono i seguenti:

1. Definisce un metodo astratto downloadArticles() che dovrebbe essere implementato dalle sottoclassi per il download degli articoli.
2. Contiene un metodo storeArticles() che prende una lista di contenuti degli articoli e li archivia in file di testo all'interno di una cartella specificata.
3. Un metodo getFolder() viene utilizzato per ottenere il percorso della cartella specificata, creandola se non esiste già.
4. Utilizza il design pattern Template Method, dove il flusso generale del processo è definito nella classe base, mentre le sottoclassi ne implementano i dettagli specifici.

-Classe "DownloadGuardian"

La classe DownloadGuardian è una sottoclasse di Download ed è progettata per scaricare articoli da The Guardian. Le sue caratteristiche principali sono:

1. Definisce costruttori per configurare la query di ricerca.
2. Sovrascrive il metodo downloadArticles() per scaricare gli articoli da The Guardian utilizzando un'API key e una stringa di query.
3. Utilizza un loop per paginare attraverso i risultati e ottiene il corpo degli articoli dalla risposta JSON dell'API.

-Classe "DownloadNYT"

La classe DownloadNYT è una sottoclasse di Download e si concentra sul download di articoli da The New York Times (NYT) da un file CSV. Le sue caratteristiche principali includono:

1. Sovrascrive il metodo downloadArticles() per leggere gli articoli da un file CSV contenente articoli di NYT.
2. Effettua una lettura riga per riga del file CSV e estrae il corpo dell'articolo.
3. Gli articoli estratti vengono archiviati in una lista e restituiti dal metodo.
-Classe App 

Rappresenta il punto di ingresso dell'applicazione e offre un'interfaccia interattiva per selezionare azioni e sorgenti per il download ed estrazione dei termini dai testi. Di seguito le sue principali caratteristiche:

1. Utilizza la classe Scanner per ottenere l'input dell'utente.
2. Implementa un ciclo do-while per mantenere l'applicazione in esecuzione fino a quando l'utente decide di terminare il programma.
3. L'utente può selezionare tra tre azioni: solo download (DL), solo estrazione termini (EL) e download ed estrazione termini (DLEL).
4. L'utente può scegliere anche la sorgente: Guardian (G) o New York Times (NYT).
5. Per l'azione di download, crea istanze di DownloadGuardian o DownloadNYT a seconda della sorgente e richiama il metodo downloadAndStore() per scaricare e memorizzare gli articoli.
6. Per l'azione di estrazione termini, crea un'istanza di Analyze e chiama il metodo extractTerms() specificando la cartella di origine degli articoli.
7. L'azione di download ed estrazione termini combina le operazioni sopra menzionate.
8. Dopo ogni azione, viene chiesto all'utente se desidera eseguire un'altra operazione.

-Panoramica del Funzionamento

L'utente avvia il programma e interagisce con l'interfaccia utente. A seconda delle scelte effettuate,
l'applicazione scarica articoli da The Guardian o da un file CSV, li analizza per trovare le parole più frequenti, e mostra i risultati all'utente.

Questo progetto rappresenta un'applicazione completa per il download, l'analisi e la visualizzazione dei dati da diverse fonti.
La separazione delle funzionalità in classi distinte consente una migliore gestione e manutenzione del codice.


                      𝗠𝗮𝗻𝘂𝗮𝗹𝗲 𝗱𝗶 𝗜𝘀𝘁𝗿𝘂𝘇𝗶𝗼𝗻𝗶 𝗽𝗲𝗿 𝗹'𝗜𝗻𝘀𝘁𝗮𝗹𝗹𝗮𝘇𝗶𝗼𝗻𝗲 𝗲𝗱 𝗘𝘀𝗲𝗰𝘂𝘇𝗶𝗼𝗻𝗲 𝗱𝗲𝗹 𝗦𝗼𝗳𝘁𝘄𝗮𝗿𝗲 𝗱𝗶 𝗔𝗻𝗮𝗹𝗶𝘀𝗶 𝗱𝗶 𝗔𝗿𝘁𝗶𝗰𝗼𝗹𝗶 𝗚𝘂𝗮𝗿𝗱𝗶𝗮𝗻 𝗲 𝗖𝗦𝗩

1. Requisiti di Sistema

Assicurati che il tuo sistema soddisfi i seguenti requisiti:
-Java Development Kit (JDK) versione 8 o superiore.
-Apache Maven installato e configurato.
-Connessione Internet attiva.
-Spazio su disco sufficiente per i file scaricati.

2. Installazione

-Scarica il repository del software dal tuo repository Git o dalla fonte fornita.
-Estrai il contenuto del repository in una directory locale sul tuo sistema.

3. Configurazione

-Apri il file di configurazione config.properties nella directory del progetto.
-Inserisci la tua chiave API del Guardian nel campo api.key. Se non hai una chiave API, ottienila registrandoti sul Guardian API.
-Configura altri parametri come la cartella di destinazione per i file scaricati, il numero massimo di articoli da scaricare, ecc. secondo le tue esigenze.

4. Esecuzione

-Apri il terminale o il prompt dei comandi.
-Naviga nella directory del progetto utilizzando il comando cd percorso/della/directory.
-Esegui il comando mvn clean compile per compilare il progetto.
-Esegui il comando mvn exec:java per avviare l'applicazione.

5. Analisi dei Risultati

-Una volta completata l'esecuzione, troverai i file scaricati nella directory di destinazione specificata nella configurazione.
-Apri il terminale e naviga nella directory dei file scaricati.
-Esegui il comando java -jar NomeDelJar.jar (sostituisci NomeDelJar con il nome effettivo del tuo file JAR) per avviare l'analisi dei file.
-L'output mostrerà le parole più comuni nei testi degli articoli scaricati.

6. Risoluzione dei Problemi Comuni

-Errore nell'avvio dell'applicazione: Verifica che tutti i requisiti di sistema siano soddisfatti e che hai seguito correttamente i passaggi di installazione ed esecuzione.
-Errore nella configurazione: Controlla di aver inserito correttamente la chiave API e i parametri di configurazione nel file config.properties.
-Problemi di connessione: Assicurati che la tua connessione Internet sia attiva e funzionante.


                                         𝗙𝘂𝗻𝘇𝗶𝗼𝗻𝗶 𝘀𝗼𝗻𝗼 𝘀𝘁𝗮𝘁𝗲 𝗿𝗶𝘂𝘁𝗶𝗹𝗶𝘇𝘇𝗮𝘁𝗲 𝗱𝗮 𝗹𝗶𝗯𝗿𝗲𝗿𝗶𝗲 𝗲𝘀𝗶𝘀𝘁𝗲𝗻𝘁𝗶

1. Gestione delle Richieste API e Download dei File:

-Libreria: Apache HttpClient
-Versione: 4.5.13
-Funzione: Utilizzata per effettuare richieste HTTP alle API del Guardian e scaricare i file JSON degli articoli.

2. Elaborazione dei File JSON:

-Libreria: Jackson JSON
-Versione: 2.13.0
-Funzione: Utilizzata per analizzare e gestire i file JSON restituiti dall'API del Guardian, estrarre le informazioni necessarie e trasformarle in oggetti Java.

3. Analisi del Testo e Tokenizzazione:

-Libreria: Stanford CoreNLP
-Versione: 4.2.2
-Funzione: Utilizzata per l'analisi del testo degli articoli scaricati, inclusa la tokenizzazione, l'identificazione delle parole chiave e la rimozione delle stop words.

4. Lettura e Scrittura su File:

-Libreria: Java NIO (Native I/O)
-Versione: Java 8 (fornita dal JDK)
-Funzione: Utilizzata per la lettura dei file JSON scaricati e la scrittura dei risultati dell'analisi delle parole più comuni su file di testo.

5. Conteggio delle Parole:

-Libreria: Libreria Standard Java
-Versione: Fornita dal JDK
-Funzione: Utilizzata per contare le occorrenze delle diverse parole nei testi degli articoli.

6. Gestione delle Proprietà di Configurazione:

-Libreria: Libreria Standard Java (java.util.Properties)
-Versione: Fornita dal JDK
-Funzione: Utilizzata per leggere e gestire le proprietà di configurazione dal file config.properties.

7. Gestione dei Log:

-Libreria: Apache Log4j
-Versione: 2.14.1
-Funzione: Utilizzata per registrare eventi e messaggi durante l'esecuzione del programma, facilitando il debug e il monitoraggio.

8. Gestione dei Parametri da Linea di Comando:

-Libreria: Apache Commons CLI
-Versione: 1.4
-Funzione: Utilizzata per analizzare e gestire i parametri forniti dalla linea di comando durante l'esecuzione del programma.

9. Interazione con l'Utente da Linea di Comando:

-Libreria: Libreria Standard Java (java.util.Scanner)
-Versione: Fornita dal JDK
-Funzione: Utilizzata per interagire con l'utente da linea di comando, ad esempio per richiedere input o conferme.
